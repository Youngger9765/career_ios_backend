name: Deploy to Cloud Run

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

env:
  PROJECT_ID: career-backed
  SERVICE_NAME: career-backend-api
  REGION: us-central1
  REGISTRY: us-central1-docker.pkg.dev
  IMAGE_NAME: career-backend/app

jobs:
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ env.PROJECT_ID }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker to use gcloud as a credential helper
      run: |
        gcloud auth configure-docker ${{ env.REGISTRY }}

    - name: Build Docker image
      run: |
        docker build -t ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
        docker tag ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
                   ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest

    - name: Push Docker image to Artifact Registry
      run: |
        docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest

    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.SERVICE_NAME }}
        region: ${{ env.REGION }}
        image: ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        flags: |
          --allow-unauthenticated
          --port=8080
          --memory=1Gi
          --cpu=1
          --min-instances=0
          --max-instances=10
          --set-env-vars=MOCK_MODE=true,DEBUG=false,GCS_PROJECT=${{ env.PROJECT_ID }}

    - name: Show service URL
      run: |
        SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \
          --platform managed \
          --region ${{ env.REGION }} \
          --format 'value(status.url)')
        echo "Service deployed to: $SERVICE_URL"
        echo "üöÄ **Deployment Complete!**"
        echo "üì± **Main App**: $SERVICE_URL/static/index.html"
        echo "üìä **Pipeline Demo**: $SERVICE_URL/static/pipeline.html"
        echo "üìö **API Docs**: $SERVICE_URL/docs"
        echo "‚ù§Ô∏è **Health Check**: $SERVICE_URL/health"

    - name: Run health check
      run: |
        sleep 30
        SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \
          --platform managed \
          --region ${{ env.REGION }} \
          --format 'value(status.url)')
        curl -f $SERVICE_URL/health || exit 1
        echo "‚úÖ Health check passed!"